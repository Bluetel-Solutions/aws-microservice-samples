service: microservice-demo

provider:
  name: aws
  runtime: nodejs6.10

# overwrite defaults here
  profile: ${opt:profile, self:custom.defaultProfile}
  region: ${opt:region, self:custom.defaultRegion}
  stage: ${opt:stage, env:AWS_STAGE, self:custom.defaultStage}

# packaging information
package:
 exclude:
  - circle.yml
  - deploy.sh
  - src/**
 include:
  - src/index.js
  - src/node_modules/alpr/**

# lambda function definitions
functions:
  pets:
    handler: src/index.handler
    events:
      - http: get pets/{petId}
      - http: put pets/{petId}

# CloudFormation resource templates
resources:
 Resources:
  PetDB:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: 'pets'
      AttributeDefinitions:
        - AttributeName: 'id'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'id'
          KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: LambdaDynamoAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AllAPIActionsOnSpecificTable
                Effect: Allow
                Action:
                  - dynamodb:*
                Resource:
                  Fn::Sub: "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${PetDB}"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole

# custom config
custom:
  defaultProfile: default
  defaultRegion: eu-west-1
  defaultStage: dev
